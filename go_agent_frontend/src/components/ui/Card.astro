---
export interface Props {
  variant?: 'default' | 'glass' | 'feature';
  padding?: 'none' | 'sm' | 'md' | 'lg';
  rounded?: 'lg' | 'xl';
  class?: string;
}

const {
  variant = 'default',
  padding = 'md',
  rounded = 'xl',
  class: className = '',
  ...rest
} = Astro.props;

const baseClasses = 'transition-all duration-300 ease-in-out';

const variants = {
  default: 'bg-[var(--bg-secondary)] border border-[var(--border)]',
  

  glass: 'bg-[var(--bg-secondary)]/60 backdrop-blur-sm border border-white/10',
  
  feature: `
    group
    bg-gradient-to-b from-[var(--bg-secondary)] to-[var(--bg-primary)] 
    border border-[var(--border)] 
    shadow-inner-custom 
    hover:border-[var(--go-color)] hover:-translate-y-1
  `
};

const paddings = {
  none: '',
  sm: 'p-4',
  md: 'p-6',
  lg: 'p-8'
};

const roundedClasses = {
  lg: 'rounded-lg',
  xl: 'rounded-xl',
};

const cardClasses = `${baseClasses} ${variants[variant]} ${paddings[padding]} ${roundedClasses[rounded]} ${className}`;
---

<div class={cardClasses} {...rest}>
  <slot />
</div>

<style is:global>
  .shadow-inner-custom {
    box-shadow: inset 0 2px 4px 0 rgba(0, 0, 0, 0.05);
  }
  .dark .shadow-inner-custom {
    box-shadow: inset 0 2px 6px 0 rgba(0, 0, 0, 0.2);
  }
</style>